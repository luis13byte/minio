apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  serviceName: "minio-svc"
  replicas: 2
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: purpose
                operator: In
                values:
                - s3-storage
      containers:
      - name: minio
        image: minio/minio:RELEASE.2022-02-07T08-17-33Z
        volumeMounts:
        - name: minio-data
          mountPath: /var/miniodata
        args:
        # Change this according to No. of replicas, namespace and volumes
        - server
        - http://minio-{0...3}.minio-svc.default.svc.cluster.local/data1
        env:
        # MinIO access key and secret key
        - name: MINIO_ACCESS_KEY
          value: "minioaccess"
        - name: MINIO_SECRET_KEY
          value: "621$$d82e7*e5e34b7e"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/live
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
  volumeClaimTemplates: # This is the specification in which you reference the StorageClass
  - metadata:
      name: minio-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 300Gi
      storageClassName: "openebs-hostpath" # This field references the existing StorageClass
